{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","handleKeyPress","event","pressedKey","setState","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAyB,CACvBC,IAAK,IAFT,EAaEC,eAAiB,SAACC,GAChB,IAAMC,EAAaD,EAAMF,IAEzB,EAAKI,SAAS,CAAEJ,IAAKG,KAhBzB,uDAKE,WACEE,SAASC,iBAAiB,UAAWC,KAAKN,kBAN9C,kCASE,WACEI,SAASG,oBAAoB,UAAWD,KAAKN,kBAVjD,oBAmBE,WACE,IAAaE,EAAeI,KAAKR,MAAzBC,IAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAEIN,EAAU,mCACsBA,EADtB,KAEN,kCA5BhB,GAAyBO,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.8c3d53dc.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  key: string\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    key: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyPress);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyPress);\n  }\n\n  handleKeyPress = (event: KeyboardEvent) => {\n    const pressedKey = event.key;\n\n    this.setState({ key: pressedKey });\n  };\n\n  render() {\n    const { key: pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {\n            pressedKey\n              ? `The last pressed key is [${pressedKey}]`\n              : 'Nothing was pressed yet'\n          }\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}