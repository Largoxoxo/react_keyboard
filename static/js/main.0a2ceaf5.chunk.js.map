{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","handleKeyPress","onKeyDown","event","handleKey","key","setState","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAyB,CACvBC,eAAgB,IAFpB,EAaEC,UAAY,SAACC,GACX,IAAMC,EAAYD,EAAME,IAExB,EAAKC,SAAS,CAAEL,eAAgBG,KAhBpC,uDAKE,WACEG,SAASC,iBAAiB,UAAWC,KAAKP,aAN9C,kCASE,WACEK,SAASG,oBAAoB,UAAWD,KAAKP,aAVjD,oBAmBE,WACE,IAAwBE,EAAcK,KAAKT,MAAnCC,eAER,OACE,qBAAKU,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAEIP,EAAS,mCACuBA,EADvB,KAEL,kCA5BhB,GAAyBQ,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.0a2ceaf5.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  handleKeyPress: string\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    handleKeyPress: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.onKeyDown);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.onKeyDown);\n  }\n\n  onKeyDown = (event: KeyboardEvent) => {\n    const handleKey = event.key;\n\n    this.setState({ handleKeyPress: handleKey });\n  };\n\n  render() {\n    const { handleKeyPress: handleKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {\n            handleKey\n              ? `The last pressed key is [${handleKey}]`\n              : 'Nothing was pressed yet'\n          }\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}